<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MeCab.DotNet</name>
    </assembly>
    <members>
        <member name="T:MeCab.Core.BitUtils">
            <summary>
            ビット値操作のユーティリティ
            </summary>
            <remarks>
            BitVector32構造体より実行速度に重点を置き、シンプルな実装にする。
            </remarks>
        </member>
        <member name="M:MeCab.Core.BitUtils.GetBitField(System.UInt32,System.Int32,System.Int32)">
            <summary>
            指定範囲のビットフィールド値を取り出す
            </summary>
            <param name="bits">ビット列を表すUInt32値</param>
            <param name="offset">開始ビット位置</param>
            <param name="len">ビット長</param>
            <returns>ビットフィールド値</returns>
        </member>
        <member name="M:MeCab.Core.BitUtils.GetFlag(System.UInt32,System.Int32)">
            <summary>
            指定位置のビット値を取り出す
            </summary>
            <param name="bits">ビット列を表すUInt32値</param>
            <param name="offset">ビット位置</param>
            <returns>ビット値</returns>
        </member>
        <member name="M:MeCab.Core.BitUtils.CompareAnd(System.UInt32,System.UInt32,System.Int32,System.Int32)">
            <summary>
            指定範囲のビット値のAND比較
            </summary>
            <param name="bits1">ビット列1を表すUInt32値</param>
            <param name="bits2">ビット列2を表すUInt32値</param>
            <param name="offset">開始ビット位置</param>
            <param name="len">ビット長</param>
            <returns>比較結果</returns>
        </member>
        <member name="P:MeCab.Core.CharInfo.Type">
            <summary>
            互換カテゴリ
            </summary>
        </member>
        <member name="P:MeCab.Core.CharInfo.DefaultType">
            <summary>
            デフォルトカテゴリ
            </summary>
        </member>
        <member name="P:MeCab.Core.CharInfo.Length">
            <summary>
            長さ: 未知語の候補生成方法
            </summary>
            <value>
            1: 1文字までの文字列を未知語とする
            2: 2文字までの文字列を未知語とする
            ...
            n: n文字までの文字列を未知語とする
            </value>
        </member>
        <member name="P:MeCab.Core.CharInfo.Group">
            <summary>
            グルーピング: 未知語の候補生成方法
            </summary>
            <value>
            true: 同じ字種でまとめる
            false: 同じ字種でまとめない
            </value>
        </member>
        <member name="P:MeCab.Core.CharInfo.Invoke">
            <summary>
            動作タイミング
            そのカテゴリにおいて, いつ未知語処理を動かすか
            </summary>
            <value>
            true: 常に未知語処理を動かす
            false: 既知語がある場合は, 未知語処理を動作させない
            </value>
        </member>
        <member name="M:MeCab.Core.CharInfo.IsKindOf(MeCab.Core.CharInfo)">
            <summary>
            互換カテゴリ判定
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:MeCab.Core.Connector.Dispose">
            <summary>
            使用中のリソースを開放する
            </summary>
        </member>
        <member name="T:MeCab.Core.DoubleArray">
            <summary>
            Double-Array Trie の実装
            </summary>
        </member>
        <member name="P:MeCab.Core.MeCabDictionary.CharSet">
            <summary>
            辞書の文字コード
            </summary>
        </member>
        <member name="P:MeCab.Core.MeCabDictionary.Version">
            <summary>
            バージョン
            </summary>
        </member>
        <member name="P:MeCab.Core.MeCabDictionary.Type">
            <summary>
            辞書のタイプ
            </summary>
        </member>
        <member name="P:MeCab.Core.MeCabDictionary.LSize">
            <summary>
            左文脈 ID のサイズ
            </summary>
        </member>
        <member name="P:MeCab.Core.MeCabDictionary.RSize">
            <summary>
            右文脈 ID のサイズ
            </summary>
        </member>
        <member name="P:MeCab.Core.MeCabDictionary.FileName">
            <summary>
            辞書のファイル名
            </summary>
        </member>
        <member name="M:MeCab.Core.MeCabDictionary.Dispose">
            <summary>
            使用されているリソースを開放する
            </summary>
        </member>
        <member name="M:MeCab.Core.StrUtils.GetString(System.Byte[],System.Text.Encoding)">
            <summary>
            バイト配列の中から終端が\0で表された文字列を取り出す。
            </summary>
            <remarks>
            バイト配列の長さはInt32.MaxValueを超えていても良い。
            </remarks>
            <param name="bytes">バイト配列</param>
            <param name="enc">文字エンコーディング</param>
            <returns>文字列（\0は含まない）</returns>
        </member>
        <member name="M:MeCab.Core.StrUtils.GetString(System.Byte[],System.Int64,System.Text.Encoding)">
            <summary>
            バイト配列の中から終端が\0で表された文字列を取り出す。
            </summary>
            <remarks>
            バイト配列の長さはInt32.MaxValueを超えていても良い。
            </remarks>
            <param name="bytes">バイト配列</param>
            <param name="offset">オフセット位置</param>
            <param name="enc">文字エンコーディング</param>
            <returns>文字列（\0は含まない）</returns>
        </member>
        <member name="M:MeCab.Core.StrUtils.GetString(System.Byte*,System.Text.Encoding)">
            <summary>
            バイト配列の中から終端が\0で表された文字列を取り出す。
            </summary>
            <remarks>
            バイト配列の長さはInt32.MaxValueを超えていても良い。
            </remarks>
            <param name="bytes">デコードする最初のバイトへのポインタ</param>
            <param name="enc">文字エンコーディング</param>
            <returns>文字列（\0は含まない）</returns>
        </member>
        <member name="M:MeCab.Core.StrUtils.GetEncoding(System.String)">
            <summary>
            指定の名前に対応するエンコーディングを取得する（.NET FWが対応していない名前にもアドホックに対応）
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:MeCab.Core.Token.LcAttr">
            <summary>
            右文脈 id
            </summary>
        </member>
        <member name="P:MeCab.Core.Token.RcAttr">
            <summary>
            左文脈 id
            </summary>
        </member>
        <member name="P:MeCab.Core.Token.PosId">
            <summary>
            形態素 ID
            </summary>
        </member>
        <member name="P:MeCab.Core.Token.WCost">
            <summary>
            単語生起コスト
            </summary>
        </member>
        <member name="P:MeCab.Core.Token.Feature">
            <summary>
            素性情報の位置
            </summary>
        </member>
        <member name="P:MeCab.Core.Token.Compound">
            <summary>
            reserved for noun compound
            </summary>
        </member>
        <member n   右文脈 id
            </summary>
        </member>
        <member name="P:MeCab.Core.Token.RcAttr">
            <summary>
            左文脈 id
            </summary>
        </member>
        <member name="P:MeCab.Core.Token.PosId">
            <summary>
            形態素 ID
            </summary>
        </member>
        <member name="P:MeCab.Core.Token.WCost">
            <summary>
            単語生起コスト
            </summary>
        </member>
        <member name="P:MeCab.Core.Token.Feature">
            <summary>
            素性情報の位置
            </summary>
        </member>
        <member name="P:MeCab.Core.Token.Compound">
            <summary>
            reserved for noun compound
            </summary>
        </member>
        <member name="M:MeCab.Core.Viterbi.Dispose">
            <summary>
            使用中のリソースを開放する
            </summary>
        </member>
        <member name="M:MeCab.Extension.FeatureExtension.GetFeatureItem(MeCab.MeCabNode,System.Int32)">
            <summary>
            素性情報の指定番目の値を取得する
            </summary>
        </member>
        <member name="M:MeCab.Extension.FeatureExtension.GetCsvItem(System.String,System.Int32)">
            <summary>
            CSV文字列の指定番目の値を取得する
            </summary>
        </member>
        <member name="M:MeCab.Extension.IpaDic.IpaDicFeatureExtension.GetPartsOfSpeech(MeCab.MeCabNode)">
            <summary>
            品詞を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.IpaDic.IpaDicFeatureExtension.GetPartsOfSpeechSection1(MeCab.MeCabNode)">
            <summary>
            品詞細分類1を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.IpaDic.IpaDicFeatureExtension.GetPartsOfSpeechSection2(MeCab.MeCabNode)">
            <summary>
            品詞細分類2を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.IpaDic.IpaDicFeatureExtension.GetPartsOfSpeechSection3(MeCab.MeCabNode)">
            <summary>
            品詞細分類3を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.IpaDic.IpaDicFeatureExtension.GetConjugatedForm(MeCab.MeCabNode)">
            <summary>
            活用形を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.IpaDic.IpaDicFeatureExtension.GetInflection(MeCab.MeCabNode)">
            <summary>
            活用型を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.IpaDic.IpaDicFeatureExtension.GetOriginalForm(MeCab.MeCabNode)">
            <summary>
            活用型を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.IpaDic.IpaDicFeatureExtension.GetReading(MeCab.MeCabNode)">
            <summary>
            読みを取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.IpaDic.IpaDicFeatureExtension.GetPronounciation(MeCab.MeCabNode)">
            <summary>
            発音を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.UniDic.UniDicFeatureExtension.GetPos1(MeCab.MeCabNode)">
            <summary>
            品詞大分類を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.UniDic.UniDicFeatureExtension.GetPos2(MeCab.MeCabNode)">
            <summary>
            品詞中分類を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.UniDic.UniDicFeatureExtension.GetPos3(MeCab.MeCabNode)">
            <summary>
            品詞小分類を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.UniDic.UniDicFeatureExtension.GetPos4(MeCab.MeCabNode)">
            <summary>
            品詞細分類を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.UniDic.UniDicFeatureExtension.GetCType(MeCab.MeCabNode)">
            <summary>
            活用型を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.UniDic.UniDicFeatureExtension.GetCForm(MeCab.MeCabNode)">
            <summary>
            活用形を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.UniDic.UniDicFeatureExtension.GetLForm(MeCab.MeCabNode)">
            <summary>
            語彙素読みを取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.UniDic.UniDicFeatureExtension.GetLemma(MeCab.MeCabNode)">
            <summary>
            語彙素（語彙素表記+ 語彙素細分類）を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.UniDic.UniDicFeatureExtension.GetOrth(MeCab.MeCabNode)">
            <summary>
            書字形出現形を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.UniDic.UniDicFeatureExtension.GetPron(MeCab.MeCabNode)">
            <summary>
            発音形出現形を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.UniDic.UniDicFeatureExtension.GetOrthBase(MeCab.MeCabNode)">
            <summary>
            書字形基本形を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.UniDic.UniDicFeatureExtension.GetPronBase(MeCab.MeCabNode)">
            <summary>
            発音形基本形を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.UniDic.UniDicFeatureExtension.GetGoshu(MeCab.MeCabNode)">
            <summary>
            語種を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.UniDic.UniDicFeatureExtension.GetIType(MeCab.MeCabNode)">
            <summary>
            語頭変化型を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.UniDic.UniDicFeatureExtension.GetIForm(MeCab.MeCabNode)">
            <summary>
            語頭変化形を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.UniDic.UniDicFeatureExtension.GetFType(MeCab.MeCabNode)">
            <summary>
            語末変化型を取得
            </summary>
        </member>
        <member name="M:MeCab.Extension.UniDic.UniDicFeatureExtension.GetFForm(MeCab.MeCabNode)">
            <summary>
            語末変化形を取得
            </summary>
        </member>
        <member name="T:MeCab.MeCabLatticeLevel">
            <summary>
            ラティスレベル(どの程度のラティス情報を解析時に構築するか)
            </summary>
        </member>
        <member name="F:MeCab.MeCabLatticeLevel.Zero">
            <summary>
            0: 最適解のみが出力可能なレベル (デフォルト, 高速) 
            </summary>
        </member>
        <member name="F:MeCab.MeCabLatticeLevel.One">
            <summary>
            1: N-best 解が出力可能なレベル (中速) 
            </summary>
        </member>
        <member name="F:MeCab.MeCabLatticeLevel.Two">
            <summary>
            2: ソフトわかち書きが可能なレベル (低速)
            </summary>
        </member>
        <member name="P:MeCab.MeCabNode.Prev">
            <summary>
            一つ前の形態素
            </summary>
        </member>
        <member name="P:MeCab.MeCabNode.Next">
            <summary>
            一つ先の形態素
            </summary>
        </member>
        <member name="P:MeCab.MeCabNode.ENext">
            <summary>
            同じ位置で終わる形態素
            </summary>
        </member>
        <member name="P:MeCab.MeCabNode.BNext">
            <summary>
            同じ開始位置で始まる形態素
            </summary>
        </member>
        <member name="P:MeCab.MeCabNode.Surface">
            <summary>
            形態素の文字列情報
            </summary>
        </member>
        <member name="P:MeCab.MeCabNode.Feature">
            <summary>
            CSV で表記された素性情報
            </summary>
        </member>
        <member name="M:MeCab.MeCabNode.SetFeature(System.UInt32,MeCab.Core.MeCabDictionary)">
            <summary>
            素性情報を遅延読込するための値設定
            </summary>
            <param name="featurePos">辞書内の素性情報の位置</param>
            <param name="dic">検索元の辞書</param>
        </member>
        <member name="P:MeCab.MeCabNode.Length">
            <summary>
            形態素の長さ
            </summary>
        </member>
        <member name="P:MeCab.MeCabNode.RLength">
            <summary>
            形態素の長さ(先頭のスペースを含む)
            </summary>
        </member>
        <member name="P:MeCab.MeCabNode.RCAttr">
            <summary>
            右文脈 id
            </summary>
        </member>
        <member name="P:MeCab.MeCabNode.LCAttr">
            <summary>
            左文脈 id
            </summary>
        </member>
        <member name="P:MeCab.MeCabNode.PosId">
            <summary>
            形態素 ID
            </summary>
        </member>
        <member name="P:MeCab.MeCabNode.CharType">
            <summary>
            文字種情報
            </summary>
        </member>
        <member name="P:MeCab.MeCabNode.Stat">
            <summary>
            形態素の種類
            </summary>
        </member>
        <member name="P:MeCab.MeCabNode.IsBest">
            <summary>
            ベスト解
            </summary>
        </member>
        <member name="P:MeCab.MeCabNode.Alpha">
            <summary>
            forward backward の foward log 確率
            </summary>
        </member>
        <member name="P:MeCab.MeCabNode.Beta">
            <summary>
            forward backward の backward log 確率
            </summary>
        </member>
        <member name="P:MeCab.MeCabNode.Prob">
            <summary>
            周辺確率
            </summary>
        </member>
        <member name="P:MeCab.MeCabNode.WCost">
            <summary>
            単語生起コスト
            </summary>
        </member>
        <member name="P:MeCab.MeCabNode.Cost">
            <summary>
            累積コスト
            </summary>
        </member>
        <member name="P:MeCab.MeCabParam.BosFeature">
            <summary>
            文頭, 文末の素性
            </summary>
        </member>
        <member name="P:MeCab.MeCabParam.CostFactor">
            <summary>
            コスト値に変換するときのスケーリングファクター
            </summary>
        </member>
        <member name="P:MeCab.MeCabParam.Theta">
            <summary>
            ソフト分かち書きの温度パラメータ
            </summary>
        </member>
        <member name="P:MeCab.MeCabParam.LatticeLevel">
            <summary>
            ラティスレベル(どの程度のラティス情報を解析時に構築するか)
            </summary>
        </member>
        <member name="P:MeCab.MeCabParam.Partial">
            <summary>
            部分解析
            </summary>
        </member>
        <member name="P:MeCab.MeCabParam.AllMorphs">
            <summary>
            出力モード
            </summary>
            <value>
            true: 全出力
            false: ベスト解のみ
            </value>
        </member>
        <member name="M:MeCab.MeCabParam.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:MeCab.MeCabTagger.Partial">
            <summary>
            部分解析モード
            </summary>
        </member>
        <member name="P:MeCab.MeCabTagger.Theta">
            <summary>
            ソフト分かち書きの温度パラメータ
            </summary>
        </member>
        <member name="P:MeCab.MeCabTagger.LatticeLevel">
            <summary>
            ラティスレベル(どの程度のラティス情報を解析時に構築するか)
            </summary>
            <value>
            0: 最適解のみが出力可能なレベル (デフォルト, 高速) 
            1: N-best 解が出力可能なレベル (中速) 
            2: ソフトわかち書きが可能なレベル (低速) 
            </value>
        </member>
        <member name="P:MeCab.MeCabTagger.AllMorphs">
            <summary>
            全出力モード
            </summary>
            <value>
            true: 全出力
            false: ベスト解のみ
            </value>
        </member>
        <member name="P:MeCab.MeCabTagger.OutPutFormatType">
            <summary>
            解析結果のフォーマット
            </summary>
        </member>
        <member name="M:MeCab.MeCabTagger.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:MeCab.MeCabTagger.Open(MeCab.MeCabParam)">
            <summary>
            MeCabTaggerを開く
            </summary>
            <param name="param">初期化パラメーター</param>
        </member>
        <member name="M:MeCab.MeCabTagger.Create">
            <summary>
            MeCabTaggerのインスタンスを生成する
            </summary>
            <returns>MeCabTaggerのインスタンス</returns>
        </member>
        <member name="M:MeCab.MeCabTagger.Create(MeCab.MeCabParam)">
            <summary>
            MeCabTaggerのインスタンスを生成する
            </summary>
            <param name="param">初期化パラメーター</param>
            <returns>MeCabTaggerのインスタンス</returns>
        </member>
        <member name="M:MeCab.MeCabTagger.Parse(System.String)">
            <summary>
            解析を行う
            </summary>
            <param name="str">解析対象の文字列</param>
            <returns>解析結果の文字列</returns>
        </member>
        <member name="M:MeCab.MeCabTagger.Parse(System.Char*,System.Int32)">
            <summary>
            解析を行う
            </summary>
            <param name="str">解析対象の文字列へのポインタ</param>
            <param name="len">解析対象の文字列の長さ</param>
            <returns>解析結果の文字列</returns>
        </member>
        <member name="M:MeCab.MeCabTagger.ParseToNode(System.String)">
            <summary>
            解析を行う
            </summary>
            <param name="str">解析対象の文字列</param>
            <returns>文頭の形態素</returns>
        </member>
        <member name="M:MeCab.MeCabTagger.ParseToNode(System.Char*,System.Int32)">
            <summary>
            解析を行う
            </summary>
            <param name="str">解析対象の文字列へのポインタ</param>
            <param name="len">解析対象の文字列の長さ</param>
            <returns>文頭の形態素</returns>
        </member>
        <member name="M:MeCab.MeCabTagger.ParseToNodes(System.String)">
            <summary>
            解析を行う
            </summary>
            <param name="str">解析対象の文字列</param>
            <returns>文頭の形態素</returns>
        </member>
        <member name="M:MeCab.MeCabTagger.ParseNBestToNode(System.String)">
            <summary>
            解析を行い結果を確からしいものから順番に取得する
            </summary>
            <param name="str">解析対象の文字列</param>
            <returns>文頭の形態素を確からしい順に取得するための列挙子</returns>
        </member>
        <member name="M:MeCab.MeCabTagger.ParseNBestToNode(System.Char*,System.Int32)">
            <summary>
            解析を行い結果を確からしいものから順番に取得する
            </summary>
            <param name="str">解析対象の文字列へのポインタ</param>
            <returns>文頭の形態素を確からしい順に取得するための列挙子の公開</returns>
        </member>
        <member name="M:MeCab.MeCabTagger.ParseNBest(System.Int32,System.String)">
            <summary>
            ParseのN-Best解出力version
            </summary>
            <param name="n">必要な解析結果の個数</param>
            <param name="str">解析対象の文字列</param>
            <returns>解析結果の文字列</returns>
        </member>
        <member name="M:MeCab.MeCabTagger.ParseNBest(System.Int32,System.Char*,System.Int32)">
            <summary>
            ParseのN-Best解出力version
            </summary>
            <param name="n">必要な解析結果の個数</param>
            <param name="str">解析対象の文字列へのポインタ</param>
            <param name="len">解析対象の文字列の長さ</param>
            <returns>解析結果の文字列</returns>
        </member>
        <member name="M:MeCab.MeCabTagger.Dispose">
            <summary>
            使用中のリソースを開放する
            </summary>
        </member>
    </members>
</doc>
